name: API Tests

on:
  # 1. Trigger automatically when backend repo creates PR (via repository_dispatch)
  repository_dispatch:
    types: [backend-pr-created, backend-pr-updated]

  # 2. Scheduled run - Daily execution (UTC 02:00, Taiwan 10:00)
  schedule:
    - cron: "0 2 * * *"

  # 3. Manual trigger (can run on any branch)
  workflow_dispatch:
    inputs:
      pytest_marks:
        description: 'Pytest marks to run (e.g: smoke, products, "positive")'
        required: false
        default: ""
        type: string
      environment:
        description: "Target environment"
        required: false
        default: "staging"
        type: choice
        options:
          - staging
          - production

  # 4. Also support PR trigger (for this repo's own PRs)
  pull_request:
    branches: ["main", "develop"]
    types: [opened, synchronize, reopened]

  # 5. Trigger on push to main branches
  push:
    branches: ["main"]

# Permissions needed for GitHub Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

env:
  ENVIRONMENT: production
  BASE_URL: https://fakestoreapi.com
  ALLURE_RESULTS_PATH: allure-results

jobs:
  scheduled-tests:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-env: [production, staging]
        test-suite: [smoke, regression]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Display trigger information
        run: |
          echo "Triggered by: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Runner OS: ${{ runner.os }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Scheduled run with matrix:"
          echo "- Environment: ${{ matrix.test-env }}"
          echo "- Test Suite: ${{ matrix.test-suite }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t fakestore-api-tests .
          echo "Docker image built successfully"

      - name: Create reports directory
        run: |
          mkdir -p reports/{allure/{results,reports},html,coverage,logs}
          echo "Reports directory structure created"

      - name: Run API Tests
        env:
          TEST_TYPE: ${{ matrix.test-suite }}
          ENVIRONMENT: ${{ matrix.test-env }}
        run: |
          echo "Running tests with marks: $TEST_TYPE on $ENVIRONMENT environment..."
          docker run --rm \
            -e ENVIRONMENT=$ENVIRONMENT \
            -v $(pwd)/reports:/app/reports \
            fakestore-api-tests pytest -m "$TEST_TYPE" -v --alluredir=/app/reports/allure/results

  manual-tests:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Display trigger information
        run: |
          echo "Triggered by: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Runner OS: ${{ runner.os }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Manual run with options:"
          echo "- Pytest marks: ${{ github.event.inputs.pytest_marks }}"
          echo "- Environment: ${{ github.event.inputs.environment }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t fakestore-api-tests .
          echo "Docker image built successfully"

      - name: Create reports directory
        run: |
          mkdir -p reports/{allure/{results,reports},html,coverage,logs}
          echo "Reports directory structure created"

      - name: Run API Tests
        env:
          TEST_TYPE: ${{ github.event.inputs.pytest_marks }}
          ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          echo "Running tests with marks: $TEST_TYPE on $ENVIRONMENT environment..."
          docker run --rm \
            -e ENVIRONMENT=$ENVIRONMENT \
            -v $(pwd)/reports:/app/reports \
            fakestore-api-tests pytest -m "$TEST_TYPE" -v --alluredir=/app/reports/allure/results

  pr-tests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Display trigger information
        run: |
          echo "Triggered by: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Runner OS: ${{ runner.os }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "PR run with smoke tests"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t fakestore-api-tests .
          echo "Docker image built successfully"

      - name: Create reports directory
        run: |
          mkdir -p reports/{allure/{results,reports},html,coverage,logs}
          echo "Reports directory structure created"

      - name: Run API Tests
        run: |
          echo "Running smoke tests on production environment..."
          docker run --rm \
            -e ENVIRONMENT=production \
            -v $(pwd)/reports:/app/reports \
            fakestore-api-tests pytest -m "smoke" -v --alluredir=/app/reports/allure/results

  # Common steps for all jobs
  generate-report:
    needs: [scheduled-tests, manual-tests, pr-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: reports/allure/results
          allure_report: reports/allure/reports
          gh_pages: gh-pages
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports/allure/reports
          destination_dir: allure-report
          keep_files: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: |
            reports/allure/results
            reports/html
            reports/logs
          retention-days: 30

      - name: Test Results Summary
        run: |
          echo "## API Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Reports" >> $GITHUB_STEP_SUMMARY
          echo "- [Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/)" >> $GITHUB_STEP_SUMMARY
          echo "- [Test Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure
        if: failure()
        run: |
          echo "API tests failed!"
          echo "Please check the logs and Allure report for details."
          # Can add Slack, Teams, Email notifications here

  # Additional parallel job: Generate test insights
  test-insights:
    runs-on: ubuntu-latest
    needs: generate-report
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Test Insights
        run: |
          echo "## Test Execution Insights" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Workflow Duration**: ${{ github.event.repository.updated_at }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runner**: ubuntu-latest" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker**: Yes" >> $GITHUB_STEP_SUMMARY
          echo "- **Parallel Execution**: Yes (Matrix Strategy)" >> $GITHUB_STEP_SUMMARY
          echo "- **Report Generation**: Allure + GitHub Pages" >> $GITHUB_STEP_SUMMARY
