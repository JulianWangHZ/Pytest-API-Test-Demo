[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --alluredir=reports/allure/results
    --html=reports/html/report.html
    --self-contained-html
    --cov=utils
    --cov=config
    --cov-report=term-missing
    --cov-report=html:reports/coverage
    --maxfail=10
    --durations=10

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = reports/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test markers
markers =
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for bug prevention
    positive: Positive test cases (happy path)
    negative: Negative test cases (error scenarios)
    boundary: Boundary value test cases
    products: Tests related to Products API
    users: Tests related to Users API
    carts: Tests related to Carts API
    auth: Tests related to Authentication API
    skip_ci: Tests to skip in CI environment

# Timeout settings
timeout = 300
timeout_method = thread

# Parallel execution
addopts = -n auto --dist=worksteal

# Warnings
filterwarnings =
    ignore::urllib3.exceptions.InsecureRequestWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Test output
console_output_style = progress
junit_family = xunit2
